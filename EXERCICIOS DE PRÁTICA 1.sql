--1) - Exiba o faturamento anual geral de todas as lojas da hamburgeria

SELECT 
    TO_CHAR(SUM(VL_LUCRO_LIQUIDO * QT_PEDIDO), 'FM999G999G999D00', 'NLS_NUMERIC_CHARACTERS='',.'' NLS_CURRENCY=''R$''')  as faturamento_geral
FROM DB_ITEM_PEDIDO;


--2) - Exiba as vendas, quantidade total e valor total agrupadas por estados

SELECT
    DE.SG_ESTADO AS UF,
    COUNT(DB_ITEM_PEDIDO.NR_PEDIDO) AS QNT_PEDIDOS,
    SUM(DB_ITEM_PEDIDO.VL_LUCRO_LIQUIDO * DB_ITEM_PEDIDO.QT_PEDIDO) AS VALOR_TOTAL_VENDAS
FROM DB_END_LOJA 
    INNER JOIN DB_LOGRADOURO DL 
        ON DB_END_LOJA.CD_LOGRADOURO = DL.CD_LOGRADOURO
    INNER JOIN DB_BAIRRO DB 
        ON DL.CD_BAIRRO = DB.CD_BAIRRO
    INNER JOIN DB_CIDADE DC 
        ON DB.CD_CIDADE = DC.CD_CIDADE
    INNER JOIN DB_ESTADO DE 
        ON DC.SG_ESTADO = DE.SG_ESTADO
    INNER JOIN DB_ITEM_PEDIDO 
        ON DB_END_LOJA.NR_LOJA = DB_ITEM_PEDIDO.NR_LOJA
GROUP BY 
    DE.SG_ESTADO
ORDER BY VALOR_TOTAL_VENDAS DESC;


--3) - Crie uma lista contendo todos os produtos cadastrados agrupado por subcategoria e categoria de produto

SELECT 
    DB_PRODUTO.CD_PRODUTO AS ID_PROD,
    DB_PRODUTO.DS_PRODUTO AS PRODUTO,
    DB_PRODUTO.VL_UNITARIO AS VALOR, 
    DB_SUB_CATEGORIA_PROD.DS_SUB_CATEGORIA_PROD AS SUB_CATEGORIA, 
    DB_CATEGORIA_PROD.DS_CATEGORIA_PROD AS CATEGORIA
FROM DB_PRODUTO
    INNER JOIN DB_SUB_CATEGORIA_PROD 
        ON DB_PRODUTO.CD_SUB_CATEGORIA_PROD = DB_SUB_CATEGORIA_PROD.CD_SUB_CATEGORIA_PROD
    INNER JOIN DB_CATEGORIA_PROD
        ON DB_SUB_CATEGORIA_PROD.CD_CATEGORIA_PROD = DB_CATEGORIA_PROD.CD_CATEGORIA_PROD    
ORDER BY DB_PRODUTO.CD_PRODUTO, DB_PRODUTO.VL_UNITARIO DESC;


--4) - Quais são os Top 5 clientes do estado de SP? Exiba o valor total e quantidade total desses clientes

SELECT
    DB_CLIENTE.NR_CLIENTE AS ID_CLIENTE,
    DB_CLIENTE.NM_CLIENTE AS NOME,
    DE.SG_ESTADO AS UF,
    COUNT(DISTINCT(DB_PEDIDO.NR_PEDIDO)) AS QT_PEDIDOS,
    SUM(DB_ITEM_PEDIDO.VL_UNITARIO * DB_ITEM_PEDIDO.QT_PEDIDO) AS VALOR_TOTAL_COMPRAS
FROM DB_CLIENTE
    INNER JOIN DB_PEDIDO
        ON DB_CLIENTE.NR_CLIENTE = DB_PEDIDO.NR_CLIENTE
    INNER JOIN DB_ITEM_PEDIDO
        ON DB_PEDIDO.NR_PEDIDO = DB_ITEM_PEDIDO.NR_PEDIDO

    INNER JOIN DB_LOGRADOURO DL 
        ON DB_PEDIDO.CD_LOGRADOURO_CLI = DL.CD_LOGRADOURO
    INNER JOIN DB_BAIRRO DB 
        ON DL.CD_BAIRRO = DB.CD_BAIRRO
    INNER JOIN DB_CIDADE DC 
        ON DB.CD_CIDADE = DC.CD_CIDADE
    INNER JOIN DB_ESTADO DE 
        ON DC.SG_ESTADO = DE.SG_ESTADO
WHERE DE.SG_ESTADO = 'SP'
GROUP BY DB_CLIENTE.NR_CLIENTE, DB_CLIENTE.NM_CLIENTE, DE.SG_ESTADO
ORDER BY VALOR_TOTAL_COMPRAS DESC
FETCH FIRST 5 ROWS ONLY;


--5) - Exiba os produtos que esses clientes consomem

SELECT
    DB_PEDIDO.NR_CLIENTE,
    DB_PEDIDO.NR_PEDIDO,
    DB_PRODUTO.DS_PRODUTO
FROM DB_PEDIDO
    JOIN DB_ITEM_PEDIDO
        ON DB_PEDIDO.NR_PEDIDO = DB_ITEM_PEDIDO.NR_PEDIDO
    JOIN DB_PRODUTO
        ON DB_ITEM_PEDIDO.NR_ITEM = DB_PRODUTO.CD_PRODUTO
WHERE 
    --Conforme exercicio acima, esses são os IDs dos top 5 clientes
    DB_PEDIDO.NR_CLIENTE = 3045 OR
    DB_PEDIDO.NR_CLIENTE = 3049 OR
    DB_PEDIDO.NR_CLIENTE = 3092 OR
    DB_PEDIDO.NR_CLIENTE = 3036 OR
    DB_PEDIDO.NR_CLIENTE = 3048 ;

-- Pergunta: Pensando de forma estratégica o que é possível fazer com essa informação?
-- Resposta: A melhor decisão baseada nessas informações seria o aumento de estoque dos produtos para que os clientes possam aumentar o número de produtos comprados
